name: Verify
on: push

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest
    env:
      go-version: 1.18.3

    steps:
      - uses: actions/checkout@v2
      # Note: golangci/golangci-lint-action caches. Should not use actions/cache@v2 otherwise result in so many "File exists"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go-version }}
      - name: generate
        shell: bash
        run: |
          go mod download
          make generate
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.46.2
      - name: Other Lint
        shell: bash
        run: |
          make lint
      - name: Update Go Report Card
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: curl -X POST -F "repo=github.com/$GITHUB_REPOSITORY" https://goreportcard.com/checks

  test:
    name: Test

    runs-on: ubuntu-latest
    container: golang:1.18.3-buster
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /go/pkg/mod  # Not ~/go/pkg/mod because "container" is active.
          key: ${{ runner.os }}-gomod-${{ hashFiles('server/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test
        shell: bash
        run: |
          make test
      - name: Upload to codecov
        shell: bash
        run: |
          curl -s https://codecov.io/bash > codecov.sh
          bash codecov.sh
      - uses: actions/upload-artifact@v2
        with:
          name: coverage.html
          path: coverage.html
  
  build:
    name: Build

    runs-on: ubuntu-latest
    env:
      go-version: 1.18.3

    steps:
      - uses: actions/checkout@v2
      # Note: golangci/golangci-lint-action caches. Should not use actions/cache@v2 otherwise result in so many "File exists"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go-version }}
      - name: build
        shell: bash
        run: |
          go mod download
          make build
